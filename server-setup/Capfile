

set :servers, "sidney.spectro.jussieu.fr"
set :clients, "pur.spectro.jussieu.fr"

role :chef_servers, servers
role :chef_clients, clients

namespace :chef do
    before "chef:install", "chef:configure" do
        unless exists?(:servers)
            raise "Please specify the hostnames to install the chef server"
        end
    end

    desc "Install the chef server on a host in order to configure it further"
    task :install, :roles => :chef_servers  do   
        run "sudo apt-get install ruby ruby1.8-dev libopenssl-ruby1.8 rdoc ri irb build-essential wget ssl-cert"
        run <<-EOC
        cd /tmp
        wget http://rubyforge.org/frs/download.php/57643/rubygems-1.3.5.tgz
        tar zxf rubygems-1.3.5.tgz
        cd rubygems-1.3.5
        sudo ruby setup.rb 
        sudo ln -sfv /usr/bin/gem1.8 /usr/bin/gem
        EOC
        run "sudo gem sources -a http://gems.opscode.com"
        run "sudo gem install ohai chef"
    end

    desc "Use chef to configure the chef server"
    task :configure:server, :roles => :chef_servers do
        upload "solo.rb", "/tmp/solo.rb", :via => :scp
        put "{ "recipes": "chef::server" }", "/tmp/chef.json". :via => :scp
        run "sudo chef-solo -c /tmp/solo.rb -j /tmp/chef.json -r http://s3.amazonaws.com/chef-solo/bootstrap-latest.tar.gz"
    end

    desc "Use chef to configure the chef clients"
    task :configure:clients, :roles => :chef_clients do
        upload "solo.rb", "/tmp/solo.rb", :via => :scp
        put "{ 'chef': { 'server_hostname': "#{server}" }, "recipes": "chef::client" }", "/tmp/chef.json". :via => :scp
        run "sudo chef-solo -c /tmp/solo.rb -j /tmp/chef.json -r http://s3.amazonaws.com/chef-solo/bootstrap-latest.tar.gz"
    end

end


#  set(:user) do
#    Capistrano::CLI.ui.ask "Give me a ssh user: "
#  end
